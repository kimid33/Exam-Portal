package com.example.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.example.model.JwtRequest;
import com.example.model.JwtResponse;
import com.example.service.impl.UserServiceImpl;
import com.example.util.JwtUtil;


@RestController
@RequestMapping("/auth")
@CrossOrigin("*")
public class AuthenticateController {
	
	@Autowired
	private AuthenticationManager authenticationManager;
	
	@Autowired
	private UserServiceImpl userServiceImpl;
	
	@Autowired
	private JwtUtil jwtUtil;
	
	//generate token
//	@PostMapping("/generate-token")
//	public ResponseEntity<?> generateToken(@RequestBody JwtRequest jwtRequest) throws Exception{
//		try {
//			authenticate(jwtRequest.getUsername(), jwtRequest.getPassword());
//			System.out.println(jwtRequest.getUsername()+""+jwtRequest.getPassword());
//		}catch(UserNotFoundException e) {
//			e.printStackTrace();
//			throw new Exception("User not found");
//		}	
//		this.userServiceImpl.loadUserByUsername(jwtRequest.getUsername());
//		String token = this.jwtUtil.generateToken(jwtRequest.getUsername());
//		return ResponseEntity.ok(token);
//	}
//	
//	private void authenticate(String username, String password) throws Exception{
//		try
//		{
//			authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(username, password));
//			System.out.println(username+""+password);
//		}catch (DisabledException e) {
//			throw new Exception("User Disabled "+e.getMessage());
//		}catch(BadCredentialsException e) {
//			throw new Exception("Invalid Credentials "+e.getMessage());
//		}
//	}
	
	@PostMapping("/login/generate-token")
	public ResponseEntity<JwtResponse> loginUser(@RequestBody JwtRequest jwtRequest)
	{
		System.out.println(jwtRequest);
		Authentication authenticate = authenticationManager
				.authenticate(new UsernamePasswordAuthenticationToken(jwtRequest.getUsername(),
						jwtRequest.getPassword()));
		
		//System.err.println(jwtRequest.getUsername()+""+jwtRequest.getPassword());
		System.out.println("helloooooooooo");
		String tokenRequest = jwtUtil.genrateToken(jwtRequest.getUsername());
	    return ResponseEntity.ok(new JwtResponse(tokenRequest,"generated by kimi"));
	}
}
